Just a list of things to do here

Priority-ranked backlog (ty gen AI for thinking so I dont have to)
* P0 (correctness/architecture)
    ✅ Convert all note timing/state to PPQ and render from PPQ.
    🔄 Make renderer data access thread-safe (has gridlineMapLock, needs double-buffered snapshot).
    ✅ Gridlines: PPQ-based beats/measures with subdivisions; remove magic offsets; handle tempo/time-sig changes.
    ❌ Migrate parameters to AudioProcessorValueTreeState and wire UI bindings.
    🔄 Audio-thread hygiene: eliminated duplicate generateTrackWindow calls; still need to remove std::function in draw path and use preallocated vectors.
    ❌ Host fallback UX when no playhead or not playing (has basic fallback, needs comprehensive UX).

* P1 (core features promised)
    ❌ Guitar sustains (render + hit windows).
    ❌ Drums lanes + BRE.
    ❌ Extended memory so notes remain visible when transport stops.
    ✅ Latency compensation and user calibration control with multi-buffer smoothing.
    ✅ Finalize grid visual polish (beat/half-beat/measure markers, visibility working).

* P2 (polish/perf/UX)
    🔄 Draw-call optimizations (eliminated duplicate work, still need culling, layer batching, image pre-scaling).
    ❌ Metronome click playback and drum sample playback aligned to PPQ.
    ❌ FPS/cpu overlay toggle and targeted logging overlay for debugging.
    ❌ DPI scaling, asset validation, fallback artwork.

* P3 (future/advanced)
    ❌ Heuristic HOPOs, open HOPOs, trill/tremolo sections.
    ❌ Real Drums support.
    ❌ MIDI lookahead (REAPER SWS) with clean fallback elsewhere.
    ✅ CI/release automation across platforms (GitHub Actions with Windows/macOS builds).

Legend: ✅ Complete | 🔄 In Progress | ❌ Not Started